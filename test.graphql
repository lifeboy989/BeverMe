# Random GraphQL schema

type Query {
  user(id: ID!): User
  posts(limit: Int, offset: Int): [Post]
  comments(postId: ID!): [Comment]
}

type Mutation {
  createUser(name: String!, email: String!): User
  createPost(authorId: ID!, title: String!, content: String!): Post
  createComment(postId: ID!, content: String!): Comment
}

# Object Types
type User {
  id: ID!
  name: String!
  email: String!
  posts: [Post]
}

type Post {
  id: ID!
  title: String!
  content: String!
  author: User!
  comments: [Comment]
}

type Comment {
  id: ID!
  content: String!
  post: Post!
}

# Inputs for queries or mutations
input PostFilter {
  authorId: ID
  keyword: String
}

# Example custom scalar
directive @deprecated(reason: String = "No longer supported") on FIELD_DEFINITION
